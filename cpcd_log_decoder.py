# 
'''
/***************************************************************************//**
* @file cpcd_log_decoder.py
* @brief This python script is intended to decode raw packets from the
* log file of cpc-daemon in order to facilitate debugging.
*******************************************************************************
* # License
* <b>Copyright 2025 Silicon Laboratories Inc. www.silabs.com</b>
*******************************************************************************
*
* SPDX-License-Identifier: Zlib
*
* The licensor of this software is Silicon Laboratories Inc.
*
* This software is provided \'as-is\', without any express or implied
* warranty. In no event will the authors be held liable for any damages
* arising from the use of this software.
*
* Permission is granted to anyone to use this software for any purpose,
* including commercial applications, and to alter it and redistribute it
* freely, subject to the following restrictions:
*
* 1. The origin of this software must not be misrepresented; you must not
*    claim that you wrote the original software. If you use this software
*    in a product, an acknowledgment in the product documentation would be
*    appreciated but is not required.
* 2. Altered source versions must be plainly marked as such, and must not be
*    misrepresented as being the original software.
* 3. This notice may not be removed or altered from any source distribution.
*
*******************************************************************************
* # Experimental Quality
* This code has not been formally tested and is provided as-is. It is not
* suitable for production environments. In addition, this code will not be
* maintained and there may be no bug maintenance planned for these resources.
* Silicon Labs may update projects from time to time.
******************************************************************************/

'''
import sys

COMMAND_MAP = {
    0x00: "SPINEL_CMD_NOOP",
    0x01: "SPINEL_CMD_RESET",
    0x02: "SPINEL_CMD_PROP_VALUE_GET",
    0x03: "SPINEL_CMD_PROP_VALUE_SET",
    0x04: "SPINEL_CMD_PROP_VALUE_INSERT",
    0x05: "SPINEL_CMD_PROP_VALUE_REMOVE",
    0x06: "SPINEL_CMD_PROP_VALUE_IS",
    0x07: "SPINEL_CMD_PROP_VALUE_INSERTED",
    0x08: "SPINEL_CMD_PROP_VALUE_REMOVED",
}

# from main/server_core/system_endpoint/system.h of cpc-daemon
# this source file also contains the key to decoding system ep
# packets!

SYS_EP_COMMAND_MAP = {
    0x00: "CMD_SYSTEM_NOOP",
    0x01: "CMD_SYSTEM_RESET",
    0x02: "CMD_SYSTEM_PROP_VALUE_GET",
    0x03: "CMD_SYSTEM_PROP_VALUE_SET",
    0x06: "CMD_SYSTEM_PROP_VALUE_IS",
    0xFF: "CMD_SYSTEM_INVALID",
}

# see util/extract_spinel_props.py in this repo to see how this dict
# was generated
KEY_MAP = {
    0x0000: "SPINEL_PROP_LAST_STATUS",
    0x0001: "SPINEL_PROP_PROTOCOL_VERSION",
    0x0002: "SPINEL_PROP_NCP_VERSION",
    0x0003: "SPINEL_PROP_INTERFACE_TYPE",
    0x0004: "SPINEL_PROP_VENDOR_ID",
    0x0005: "SPINEL_PROP_CAPS",
    0x0006: "SPINEL_PROP_INTERFACE_COUNT",
    0x0007: "SPINEL_PROP_POWER_STATE",
    0x0008: "SPINEL_PROP_HWADDR",
    0x0009: "SPINEL_PROP_LOCK",
    0x000A: "SPINEL_PROP_HBO_MEM_MAX",
    0x000B: "SPINEL_PROP_HBO_BLOCK_MAX",
    0x000C: "SPINEL_PROP_HOST_POWER_STATE",
    0x000D: "SPINEL_PROP_MCU_POWER_STATE",
    0x0020: "SPINEL_PROP_PHY_ENABLED",
    0x0021: "SPINEL_PROP_PHY_CHAN",
    0x0022: "SPINEL_PROP_PHY_CHAN_SUPPORTED",
    0x0023: "SPINEL_PROP_PHY_FREQ",
    0x0024: "SPINEL_PROP_PHY_CCA_THRESHOLD",
    0x0025: "SPINEL_PROP_PHY_TX_POWER",
    0x0026: "SPINEL_PROP_PHY_RSSI",
    0x0027: "SPINEL_PROP_PHY_RX_SENSITIVITY",
    0x0028: "SPINEL_PROP_PHY_PCAP_ENABLED",
    0x0029: "SPINEL_PROP_PHY_CHAN_PREFERRED",
    0x002A: "SPINEL_PROP_PHY_FEM_LNA_GAIN",
    0x002B: "SPINEL_PROP_PHY_CHAN_MAX_POWER",
    0x002C: "SPINEL_PROP_PHY_REGION_CODE",
    0x002D: "SPINEL_PROP_PHY_CALIBRATED_POWER",
    0x002E: "SPINEL_PROP_PHY_CHAN_TARGET_POWER",
    0x0030: "SPINEL_PROP_MAC_SCAN_STATE",
    0x0031: "SPINEL_PROP_MAC_SCAN_MASK",
    0x0032: "SPINEL_PROP_MAC_SCAN_PERIOD",
    0x0033: "SPINEL_PROP_MAC_SCAN_BEACON",
    0x0034: "SPINEL_PROP_MAC_15_4_LADDR",
    0x0035: "SPINEL_PROP_MAC_15_4_SADDR",
    0x0036: "SPINEL_PROP_MAC_15_4_PANID",
    0x0037: "SPINEL_PROP_MAC_RAW_STREAM_ENABLED",
    0x0038: "SPINEL_PROP_MAC_PROMISCUOUS_MODE",
    0x0039: "SPINEL_PROP_MAC_ENERGY_SCAN_RESULT",
    0x003A: "SPINEL_PROP_MAC_DATA_POLL_PERIOD",
    0x003B: "SPINEL_PROP_MAC_RX_ON_WHEN_IDLE_MODE",
    0x003C: "SPINEL_PROP_MAC_15_4_ALT_SADDR",
    0x003D: "SPINEL_PROP_MAC_RX_AT",
    0x0040: "SPINEL_PROP_NET_SAVED",
    0x0041: "SPINEL_PROP_NET_IF_UP",
    0x0042: "SPINEL_PROP_NET_STACK_UP",
    0x0043: "SPINEL_PROP_NET_ROLE",
    0x0044: "SPINEL_PROP_NET_NETWORK_NAME",
    0x0045: "SPINEL_PROP_NET_XPANID",
    0x0046: "SPINEL_PROP_NET_NETWORK_KEY",
    0x0047: "SPINEL_PROP_NET_KEY_SEQUENCE_COUNTER",
    0x0048: "SPINEL_PROP_NET_PARTITION_ID",
    0x0049: "SPINEL_PROP_NET_REQUIRE_JOIN_EXISTING",
    0x004A: "SPINEL_PROP_NET_KEY_SWITCH_GUARDTIME",
    0x004B: "SPINEL_PROP_NET_PSKC",
    0x004C: "SPINEL_PROP_NET_LEAVE_GRACEFULLY",
    0x0050: "SPINEL_PROP_THREAD_LEADER_ADDR",
    0x0051: "SPINEL_PROP_THREAD_PARENT",
    0x0052: "SPINEL_PROP_THREAD_CHILD_TABLE",
    0x0053: "SPINEL_PROP_THREAD_LEADER_RID",
    0x0054: "SPINEL_PROP_THREAD_LEADER_WEIGHT",
    0x0055: "SPINEL_PROP_THREAD_LOCAL_LEADER_WEIGHT",
    0x0056: "SPINEL_PROP_THREAD_NETWORK_DATA",
    0x0057: "SPINEL_PROP_THREAD_NETWORK_DATA_VERSION",
    0x0058: "SPINEL_PROP_THREAD_STABLE_NETWORK_DATA",
    0x0059: "SPINEL_PROP_THREAD_STABLE_NETWORK_DATA_VERSION",
    0x005A: "SPINEL_PROP_THREAD_ON_MESH_NETS",
    0x005B: "SPINEL_PROP_THREAD_OFF_MESH_ROUTES",
    0x005C: "SPINEL_PROP_THREAD_ASSISTING_PORTS",
    0x005D: "SPINEL_PROP_THREAD_ALLOW_LOCAL_NET_DATA_CHANGE",
    0x005E: "SPINEL_PROP_THREAD_MODE",
    0x0060: "SPINEL_PROP_IPV6_LL_ADDR",
    0x0061: "SPINEL_PROP_IPV6_ML_ADDR",
    0x0062: "SPINEL_PROP_IPV6_ML_PREFIX",
    0x0063: "SPINEL_PROP_IPV6_ADDRESS_TABLE",
    0x0064: "SPINEL_PROP_IPV6_ROUTE_TABLE",
    0x0065: "SPINEL_PROP_IPV6_ICMP_PING_OFFLOAD",
    0x0066: "SPINEL_PROP_IPV6_MULTICAST_ADDRESS_TABLE",
    0x0067: "SPINEL_PROP_IPV6_ICMP_PING_OFFLOAD_MODE",
    0x0070: "SPINEL_PROP_STREAM_DEBUG",
    0x0071: "SPINEL_PROP_STREAM_RAW",
    0x0072: "SPINEL_PROP_STREAM_NET",
    0x0073: "SPINEL_PROP_STREAM_NET_INSECURE",
    0x0074: "SPINEL_PROP_STREAM_LOG",
    0x0080: "SPINEL_PROP_MESHCOP_JOINER_STATE",
    0x0081: "SPINEL_PROP_MESHCOP_JOINER_COMMISSIONING",
    0x0082: "SPINEL_PROP_MESHCOP_COMMISSIONER_STATE",
    0x0083: "SPINEL_PROP_MESHCOP_COMMISSIONER_JOINERS",
    0x0084: "SPINEL_PROP_MESHCOP_COMMISSIONER_PROVISIONING_URL",
    0x0085: "SPINEL_PROP_MESHCOP_COMMISSIONER_SESSION_ID",
    0x0086: "SPINEL_PROP_MESHCOP_JOINER_DISCERNER",
    0x00A0: "SPINEL_PROP_SERVER_ALLOW_LOCAL_DATA_CHANGE",
    0x00A1: "SPINEL_PROP_SERVER_SERVICES",
    0x00A2: "SPINEL_PROP_SERVER_LEADER_SERVICES",
    0x00B0: "SPINEL_PROP_RCP_API_VERSION",
    0x00B1: "SPINEL_PROP_RCP_MIN_HOST_API_VERSION",
    0x00B2: "SPINEL_PROP_RCP_LOG_CRASH_DUMP",
    0x0100: "SPINEL_PROP_UART_BITRATE",
    0x0101: "SPINEL_PROP_UART_XON_XOFF",
    0x0401: "SPINEL_PROP_15_4_PIB_PHY_CHANNELS_SUPPORTED",
    0x0451: "SPINEL_PROP_15_4_PIB_MAC_PROMISCUOUS_MODE",
    0x045D: "SPINEL_PROP_15_4_PIB_MAC_SECURITY_ENABLED",
    0x0500: "SPINEL_PROP_CNTR_RESET",
    0x0501: "SPINEL_PROP_CNTR_TX_PKT_TOTAL",
    0x0502: "SPINEL_PROP_CNTR_TX_PKT_ACK_REQ",
    0x0503: "SPINEL_PROP_CNTR_TX_PKT_ACKED",
    0x0504: "SPINEL_PROP_CNTR_TX_PKT_NO_ACK_REQ",
    0x0505: "SPINEL_PROP_CNTR_TX_PKT_DATA",
    0x0506: "SPINEL_PROP_CNTR_TX_PKT_DATA_POLL",
    0x0507: "SPINEL_PROP_CNTR_TX_PKT_BEACON",
    0x0508: "SPINEL_PROP_CNTR_TX_PKT_BEACON_REQ",
    0x0509: "SPINEL_PROP_CNTR_TX_PKT_OTHER",
    0x050A: "SPINEL_PROP_CNTR_TX_PKT_RETRY",
    0x050B: "SPINEL_PROP_CNTR_TX_ERR_CCA",
    0x050C: "SPINEL_PROP_CNTR_TX_PKT_UNICAST",
    0x050D: "SPINEL_PROP_CNTR_TX_PKT_BROADCAST",
    0x050E: "SPINEL_PROP_CNTR_TX_ERR_ABORT",
    0x0564: "SPINEL_PROP_CNTR_RX_PKT_TOTAL",
    0x0565: "SPINEL_PROP_CNTR_RX_PKT_DATA",
    0x0566: "SPINEL_PROP_CNTR_RX_PKT_DATA_POLL",
    0x0567: "SPINEL_PROP_CNTR_RX_PKT_BEACON",
    0x0568: "SPINEL_PROP_CNTR_RX_PKT_BEACON_REQ",
    0x0569: "SPINEL_PROP_CNTR_RX_PKT_OTHER",
    0x056A: "SPINEL_PROP_CNTR_RX_PKT_FILT_WL",
    0x056B: "SPINEL_PROP_CNTR_RX_PKT_FILT_DA",
    0x056C: "SPINEL_PROP_CNTR_RX_ERR_EMPTY",
    0x056D: "SPINEL_PROP_CNTR_RX_ERR_UKWN_NBR",
    0x056E: "SPINEL_PROP_CNTR_RX_ERR_NVLD_SADDR",
    0x056F: "SPINEL_PROP_CNTR_RX_ERR_SECURITY",
    0x0570: "SPINEL_PROP_CNTR_RX_ERR_BAD_FCS",
    0x0571: "SPINEL_PROP_CNTR_RX_ERR_OTHER",
    0x0572: "SPINEL_PROP_CNTR_RX_PKT_DUP",
    0x0573: "SPINEL_PROP_CNTR_RX_PKT_UNICAST",
    0x0574: "SPINEL_PROP_CNTR_RX_PKT_BROADCAST",
    0x05C8: "SPINEL_PROP_CNTR_TX_IP_SEC_TOTAL",
    0x05C9: "SPINEL_PROP_CNTR_TX_IP_INSEC_TOTAL",
    0x05CA: "SPINEL_PROP_CNTR_TX_IP_DROPPED",
    0x05CB: "SPINEL_PROP_CNTR_RX_IP_SEC_TOTAL",
    0x05CC: "SPINEL_PROP_CNTR_RX_IP_INSEC_TOTAL",
    0x05CD: "SPINEL_PROP_CNTR_RX_IP_DROPPED",
    0x062C: "SPINEL_PROP_CNTR_TX_SPINEL_TOTAL",
    0x062D: "SPINEL_PROP_CNTR_RX_SPINEL_TOTAL",
    0x062E: "SPINEL_PROP_CNTR_RX_SPINEL_ERR",
    0x062F: "SPINEL_PROP_CNTR_RX_SPINEL_OUT_OF_ORDER_TID",
    0x0630: "SPINEL_PROP_CNTR_IP_TX_SUCCESS",
    0x0631: "SPINEL_PROP_CNTR_IP_RX_SUCCESS",
    0x0632: "SPINEL_PROP_CNTR_IP_TX_FAILURE",
    0x0633: "SPINEL_PROP_CNTR_IP_RX_FAILURE",
    0x0690: "SPINEL_PROP_MSG_BUFFER_COUNTERS",
    0x0691: "SPINEL_PROP_CNTR_ALL_MAC_COUNTERS",
    0x0692: "SPINEL_PROP_CNTR_MLE_COUNTERS",
    0x0693: "SPINEL_PROP_CNTR_ALL_IP_COUNTERS",
    0x0694: "SPINEL_PROP_CNTR_MAC_RETRY_HISTOGRAM",
    0x0800: "SPINEL_PROP_RCP_MAC_KEY",
    0x0801: "SPINEL_PROP_RCP_MAC_FRAME_COUNTER",
    0x0802: "SPINEL_PROP_RCP_TIMESTAMP",
    0x0803: "SPINEL_PROP_RCP_ENH_ACK_PROBING",
    0x0804: "SPINEL_PROP_RCP_CSL_ACCURACY",
    0x0805: "SPINEL_PROP_RCP_CSL_UNCERTAINTY",
    0x0900: "SPINEL_PROP_MULTIPAN_ACTIVE_INTERFACE",
    0x0911: "SPINEL_PROP_INFRA_IF_STATE",
    0x0912: "SPINEL_PROP_INFRA_IF_RECV_ICMP6",
    0x0913: "SPINEL_PROP_INFRA_IF_SEND_ICMP6",
    0x0921: "SPINEL_PROP_SRP_SERVER_ENABLED",
    0x0922: "SPINEL_PROP_SRP_SERVER_AUTO_ENABLE_MODE",
    0x0931: "SPINEL_PROP_DNSSD_STATE",
    0x0932: "SPINEL_PROP_DNSSD_REQUEST_RESULT",
    0x0933: "SPINEL_PROP_DNSSD_HOST",
    0x0934: "SPINEL_PROP_DNSSD_SERVICE",
    0x0935: "SPINEL_PROP_DNSSD_KEY_RECORD",
    0x1000: "SPINEL_PROP_GPIO_CONFIG",
    0x1002: "SPINEL_PROP_GPIO_STATE",
    0x1003: "SPINEL_PROP_GPIO_STATE_SET",
    0x1004: "SPINEL_PROP_GPIO_STATE_CLEAR",
    0x1005: "SPINEL_PROP_TRNG_32",
    0x1006: "SPINEL_PROP_TRNG_128",
    0x1007: "SPINEL_PROP_TRNG_RAW_32",
    0x1008: "SPINEL_PROP_UNSOL_UPDATE_FILTER",
    0x1009: "SPINEL_PROP_UNSOL_UPDATE_LIST",
    0x1200: "SPINEL_PROP_JAM_DETECT_ENABLE",
    0x1201: "SPINEL_PROP_JAM_DETECTED",
    0x1202: "SPINEL_PROP_JAM_DETECT_RSSI_THRESHOLD",
    0x1203: "SPINEL_PROP_JAM_DETECT_WINDOW",
    0x1204: "SPINEL_PROP_JAM_DETECT_BUSY",
    0x1205: "SPINEL_PROP_JAM_DETECT_HISTORY_BITMAP",
    0x1206: "SPINEL_PROP_CHANNEL_MONITOR_SAMPLE_INTERVAL",
    0x1207: "SPINEL_PROP_CHANNEL_MONITOR_RSSI_THRESHOLD",
    0x1208: "SPINEL_PROP_CHANNEL_MONITOR_SAMPLE_WINDOW",
    0x1209: "SPINEL_PROP_CHANNEL_MONITOR_SAMPLE_COUNT",
    0x120A: "SPINEL_PROP_CHANNEL_MONITOR_CHANNEL_OCCUPANCY",
    0x120B: "SPINEL_PROP_RADIO_CAPS",
    0x120C: "SPINEL_PROP_RADIO_COEX_METRICS",
    0x120D: "SPINEL_PROP_RADIO_COEX_ENABLE",
    0x1300: "SPINEL_PROP_MAC_ALLOWLIST",
    0x1301: "SPINEL_PROP_MAC_ALLOWLIST_ENABLED",
    0x1302: "SPINEL_PROP_MAC_EXTENDED_ADDR",
    0x1303: "SPINEL_PROP_MAC_SRC_MATCH_ENABLED",
    0x1304: "SPINEL_PROP_MAC_SRC_MATCH_SHORT_ADDRESSES",
    0x1305: "SPINEL_PROP_MAC_SRC_MATCH_EXTENDED_ADDRESSES",
    0x1306: "SPINEL_PROP_MAC_DENYLIST",
    0x1307: "SPINEL_PROP_MAC_DENYLIST_ENABLED",
    0x1308: "SPINEL_PROP_MAC_FIXED_RSS",
    0x1309: "SPINEL_PROP_MAC_CCA_FAILURE_RATE",
    0x130A: "SPINEL_PROP_MAC_MAX_RETRY_NUMBER_DIRECT",
    0x130B: "SPINEL_PROP_MAC_MAX_RETRY_NUMBER_INDIRECT",
    0x1500: "SPINEL_PROP_THREAD_CHILD_TIMEOUT",
    0x1501: "SPINEL_PROP_THREAD_RLOC16",
    0x1502: "SPINEL_PROP_THREAD_ROUTER_UPGRADE_THRESHOLD",
    0x1503: "SPINEL_PROP_THREAD_CONTEXT_REUSE_DELAY",
    0x1504: "SPINEL_PROP_THREAD_NETWORK_ID_TIMEOUT",
    0x1505: "SPINEL_PROP_THREAD_ACTIVE_ROUTER_IDS",
    0x1506: "SPINEL_PROP_THREAD_RLOC16_DEBUG_PASSTHRU",
    0x1507: "SPINEL_PROP_THREAD_ROUTER_ROLE_ENABLED",
    0x1508: "SPINEL_PROP_THREAD_ROUTER_DOWNGRADE_THRESHOLD",
    0x1509: "SPINEL_PROP_THREAD_ROUTER_SELECTION_JITTER",
    0x150A: "SPINEL_PROP_THREAD_PREFERRED_ROUTER_ID",
    0x150B: "SPINEL_PROP_THREAD_NEIGHBOR_TABLE",
    0x150C: "SPINEL_PROP_THREAD_CHILD_COUNT_MAX",
    0x150D: "SPINEL_PROP_THREAD_LEADER_NETWORK_DATA",
    0x150E: "SPINEL_PROP_THREAD_STABLE_LEADER_NETWORK_DATA",
    0x150F: "SPINEL_PROP_THREAD_JOINERS",
    0x1510: "SPINEL_PROP_THREAD_COMMISSIONER_ENABLED",
    0x1511: "SPINEL_PROP_THREAD_TMF_PROXY_ENABLED",
    0x1512: "SPINEL_PROP_THREAD_TMF_PROXY_STREAM",
    0x1513: "SPINEL_PROP_THREAD_DISCOVERY_SCAN_JOINER_FLAG",
    0x1514: "SPINEL_PROP_THREAD_DISCOVERY_SCAN_ENABLE_FILTERING",
    0x1515: "SPINEL_PROP_THREAD_DISCOVERY_SCAN_PANID",
    0x1516: "SPINEL_PROP_THREAD_STEERING_DATA",
    0x1517: "SPINEL_PROP_THREAD_ROUTER_TABLE",
    0x1518: "SPINEL_PROP_THREAD_ACTIVE_DATASET",
    0x1519: "SPINEL_PROP_THREAD_PENDING_DATASET",
    0x151A: "SPINEL_PROP_THREAD_MGMT_SET_ACTIVE_DATASET",
    0x151B: "SPINEL_PROP_THREAD_MGMT_SET_PENDING_DATASET",
    0x151C: "SPINEL_PROP_DATASET_ACTIVE_TIMESTAMP",
    0x151D: "SPINEL_PROP_DATASET_PENDING_TIMESTAMP",
    0x151E: "SPINEL_PROP_DATASET_DELAY_TIMER",
    0x151F: "SPINEL_PROP_DATASET_SECURITY_POLICY",
    0x1520: "SPINEL_PROP_DATASET_RAW_TLVS",
    0x1521: "SPINEL_PROP_THREAD_CHILD_TABLE_ADDRESSES",
    0x1522: "SPINEL_PROP_THREAD_NEIGHBOR_TABLE_ERROR_RATES",
    0x1523: "SPINEL_PROP_THREAD_ADDRESS_CACHE_TABLE",
    0x1524: "SPINEL_PROP_THREAD_UDP_FORWARD_STREAM",
    0x1525: "SPINEL_PROP_THREAD_MGMT_GET_ACTIVE_DATASET",
    0x1526: "SPINEL_PROP_THREAD_MGMT_GET_PENDING_DATASET",
    0x1527: "SPINEL_PROP_DATASET_DEST_ADDRESS",
    0x1528: "SPINEL_PROP_THREAD_NEW_DATASET",
    0x1529: "SPINEL_PROP_THREAD_CSL_PERIOD",
    0x152A: "SPINEL_PROP_THREAD_CSL_TIMEOUT",
    0x152B: "SPINEL_PROP_THREAD_CSL_CHANNEL",
    0x152C: "SPINEL_PROP_THREAD_DOMAIN_NAME",
    0x152D: "SPINEL_PROP_THREAD_LINK_METRICS_QUERY",
    0x152E: "SPINEL_PROP_THREAD_LINK_METRICS_QUERY_RESULT",
    0x152F: "SPINEL_PROP_THREAD_LINK_METRICS_PROBE",
    0x1530: "SPINEL_PROP_THREAD_LINK_METRICS_MGMT_ENH_ACK",
    0x1531: "SPINEL_PROP_THREAD_LINK_METRICS_MGMT_ENH_ACK_IE",
    0x1532: "SPINEL_PROP_THREAD_LINK_METRICS_MGMT_FORWARD",
    0x1533: "SPINEL_PROP_THREAD_LINK_METRICS_MGMT_RESPONSE",
    0x1534: "SPINEL_PROP_THREAD_MLR_REQUEST",
    0x1535: "SPINEL_PROP_THREAD_MLR_RESPONSE",
    0x1536: "SPINEL_PROP_THREAD_DUA_ID",
    0x1537: "SPINEL_PROP_THREAD_BACKBONE_ROUTER_PRIMARY",
    0x1538: "SPINEL_PROP_THREAD_BACKBONE_ROUTER_LOCAL_STATE",
    0x1539: "SPINEL_PROP_THREAD_BACKBONE_ROUTER_LOCAL_CONFIG",
    0x153A: "SPINEL_PROP_THREAD_BACKBONE_ROUTER_LOCAL_REGISTER",
    0x153B: "SPINEL_PROP_THREAD_BACKBONE_ROUTER_LOCAL_REGISTRATION_JITTER",
    0x153C: "SPINEL_PROP_THREAD_ACTIVE_DATASET_TLVS",
    0x153D: "SPINEL_PROP_THREAD_PENDING_DATASET_TLVS",
    0x153E: "SPINEL_PROP_THREAD_MGMT_SET_PENDING_DATASET_TLVS",
    0x153F: "SPINEL_PROP_THREAD_WAKEUP_CHANNEL",
    0x1800: "SPINEL_PROP_MESHCOP_COMMISSIONER_ANNOUNCE_BEGIN",
    0x1801: "SPINEL_PROP_MESHCOP_COMMISSIONER_ENERGY_SCAN",
    0x1802: "SPINEL_PROP_MESHCOP_COMMISSIONER_ENERGY_SCAN_RESULT",
    0x1803: "SPINEL_PROP_MESHCOP_COMMISSIONER_PAN_ID_QUERY",
    0x1804: "SPINEL_PROP_MESHCOP_COMMISSIONER_PAN_ID_CONFLICT_RESULT",
    0x1805: "SPINEL_PROP_MESHCOP_COMMISSIONER_MGMT_GET",
    0x1806: "SPINEL_PROP_MESHCOP_COMMISSIONER_MGMT_SET",
    0x1807: "SPINEL_PROP_MESHCOP_COMMISSIONER_GENERATE_PSKC",
    0x1900: "SPINEL_PROP_CHANNEL_MANAGER_NEW_CHANNEL",
    0x1901: "SPINEL_PROP_CHANNEL_MANAGER_DELAY",
    0x1902: "SPINEL_PROP_CHANNEL_MANAGER_SUPPORTED_CHANNELS",
    0x1903: "SPINEL_PROP_CHANNEL_MANAGER_FAVORED_CHANNELS",
    0x1904: "SPINEL_PROP_CHANNEL_MANAGER_CHANNEL_SELECT",
    0x1905: "SPINEL_PROP_CHANNEL_MANAGER_AUTO_SELECT_ENABLED",
    0x1906: "SPINEL_PROP_CHANNEL_MANAGER_AUTO_SELECT_INTERVAL",
    0x1907: "SPINEL_PROP_THREAD_NETWORK_TIME",
    0x1908: "SPINEL_PROP_TIME_SYNC_PERIOD",
    0x1909: "SPINEL_PROP_TIME_SYNC_XTAL_THRESHOLD",
    0x190A: "SPINEL_PROP_CHILD_SUPERVISION_INTERVAL",
    0x190B: "SPINEL_PROP_CHILD_SUPERVISION_CHECK_TIMEOUT",
    0x190C: "SPINEL_PROP_RCP_VERSION",
    0x190D: "SPINEL_PROP_PARENT_RESPONSE_INFO",
    0x190E: "SPINEL_PROP_SLAAC_ENABLED",
    0x190F: "SPINEL_PROP_SUPPORTED_RADIO_LINKS",
    0x1910: "SPINEL_PROP_NEIGHBOR_TABLE_MULTI_RADIO_INFO",
    0x1911: "SPINEL_PROP_SRP_CLIENT_START",
    0x1912: "SPINEL_PROP_SRP_CLIENT_LEASE_INTERVAL",
    0x1913: "SPINEL_PROP_SRP_CLIENT_KEY_LEASE_INTERVAL",
    0x1914: "SPINEL_PROP_SRP_CLIENT_HOST_INFO",
    0x1915: "SPINEL_PROP_SRP_CLIENT_HOST_NAME",
    0x1916: "SPINEL_PROP_SRP_CLIENT_HOST_ADDRESSES",
    0x1917: "SPINEL_PROP_SRP_CLIENT_SERVICES",
    0x1918: "SPINEL_PROP_SRP_CLIENT_HOST_SERVICES_REMOVE",
    0x1919: "SPINEL_PROP_SRP_CLIENT_HOST_SERVICES_CLEAR",
    0x191A: "SPINEL_PROP_SRP_CLIENT_EVENT",
    0x191B: "SPINEL_PROP_SRP_CLIENT_SERVICE_KEY_ENABLED",
    0x3BC0: "SPINEL_PROP_NEST_STREAM_MFG",
    0x3BC1: "SPINEL_PROP_NEST_LEGACY_ULA_PREFIX",
    0x3BC2: "SPINEL_PROP_NEST_LEGACY_LAST_NODE_JOINED",
    0x4000: "SPINEL_PROP_DEBUG_TEST_ASSERT",
    0x4001: "SPINEL_PROP_DEBUG_NCP_LOG_LEVEL",
    0x4002: "SPINEL_PROP_DEBUG_TEST_WATCHDOG",
    0x4003: "SPINEL_PROP_DEBUG_LOG_TIMESTAMP_BASE",
    0x4004: "SPINEL_PROP_DEBUG_TREL_TEST_MODE_ENABLE"
}

# from main/server_core/system_endpoint/system.h of cpc-daemon
# this source file also contains the key to decoding system ep
# packets!

SYS_EP_KEY_MAP = {
    0x0000: "PROP_LAST_STATUS",
    0x0001: "PROP_PROTOCOL_VERSION",
    0x0002: "PROP_CAPABILITIES",
    0x0003: "PROP_SECONDARY_CPC_VERSION",
    0x0004: "PROP_SECONDARY_APP_VERSION",
    0x0020: "PROP_RX_CAPABILITY",
    0x0030: "PROP_FC_VALIDATION_VALUE",
    0x0040: "PROP_BUS_BITRATE_VALUE",
    0x0050: "PROP_BUS_MAX_BITRATE_VALUE",
    0x0060: "PROP_PRIMARY_VERSION_VALUE",
    0x0200: "PROP_BOOTLOADER_INFO",
    0x0202: "PROP_BOOTLOADER_REBOOT_MODE",
    0x0301: "PROP_SECURITY_STATE",
    0x0400: "PROP_CORE_DEBUG_COUNTERS",
    0x0500: "PROP_UFRAME_PROCESSING",
    0x0600: "PROP_ENTER_IRQ",
    0x0700: "PROP_ENDPOINT_ENCRYPTION",
    0x1000: "PROP_ENDPOINT_STATE_0",
    0x1001: "PROP_ENDPOINT_STATE_1",
    0x1002: "PROP_ENDPOINT_STATE_2",
    0x1003: "PROP_ENDPOINT_STATE_3",
    0x1004: "PROP_ENDPOINT_STATE_4",
    0x1005: "PROP_ENDPOINT_STATE_5",
    0x1006: "PROP_ENDPOINT_STATE_6",
    0x1007: "PROP_ENDPOINT_STATE_7",
    0x1008: "PROP_ENDPOINT_STATE_8",
    0x1009: "PROP_ENDPOINT_STATE_9",
    0x100A: "PROP_ENDPOINT_STATE_10",
    0x100B: "PROP_ENDPOINT_STATE_11",
    0x100C: "PROP_ENDPOINT_STATE_12",
    0x100D: "PROP_ENDPOINT_STATE_13",
    0x100E: "PROP_ENDPOINT_STATE_14",
    0x100F: "PROP_ENDPOINT_STATE_15",
    0x1010: "PROP_ENDPOINT_STATE_16",
    0x1011: "PROP_ENDPOINT_STATE_17",
    0x1012: "PROP_ENDPOINT_STATE_18",
    0x1013: "PROP_ENDPOINT_STATE_19",
    0x1014: "PROP_ENDPOINT_STATE_20",
    0x1015: "PROP_ENDPOINT_STATE_21",
    0x1016: "PROP_ENDPOINT_STATE_22",
    0x1017: "PROP_ENDPOINT_STATE_23",
    0x1018: "PROP_ENDPOINT_STATE_24",
    0x1019: "PROP_ENDPOINT_STATE_25",
    0x101A: "PROP_ENDPOINT_STATE_26",
    0x101B: "PROP_ENDPOINT_STATE_27",
    0x101C: "PROP_ENDPOINT_STATE_28",
    0x101D: "PROP_ENDPOINT_STATE_29",
    0x101E: "PROP_ENDPOINT_STATE_30",
    0x101F: "PROP_ENDPOINT_STATE_31",
    0x1020: "PROP_ENDPOINT_STATE_32",
    0x1021: "PROP_ENDPOINT_STATE_33",
    0x1022: "PROP_ENDPOINT_STATE_34",
    0x1023: "PROP_ENDPOINT_STATE_35",
    0x1024: "PROP_ENDPOINT_STATE_36",
    0x1025: "PROP_ENDPOINT_STATE_37",
    0x1026: "PROP_ENDPOINT_STATE_38",
    0x1027: "PROP_ENDPOINT_STATE_39",
    0x1028: "PROP_ENDPOINT_STATE_40",
    0x1029: "PROP_ENDPOINT_STATE_41",
    0x102A: "PROP_ENDPOINT_STATE_42",
    0x102B: "PROP_ENDPOINT_STATE_43",
    0x102C: "PROP_ENDPOINT_STATE_44",
    0x102D: "PROP_ENDPOINT_STATE_45",
    0x102E: "PROP_ENDPOINT_STATE_46",
    0x102F: "PROP_ENDPOINT_STATE_47",
    0x1030: "PROP_ENDPOINT_STATE_48",
    0x1031: "PROP_ENDPOINT_STATE_49",
    0x1032: "PROP_ENDPOINT_STATE_50",
    0x1033: "PROP_ENDPOINT_STATE_51",
    0x1034: "PROP_ENDPOINT_STATE_52",
    0x1035: "PROP_ENDPOINT_STATE_53",
    0x1036: "PROP_ENDPOINT_STATE_54",
    0x1037: "PROP_ENDPOINT_STATE_55",
    0x1038: "PROP_ENDPOINT_STATE_56",
    0x1039: "PROP_ENDPOINT_STATE_57",
    0x103A: "PROP_ENDPOINT_STATE_58",
    0x103B: "PROP_ENDPOINT_STATE_59",
    0x103C: "PROP_ENDPOINT_STATE_60",
    0x103D: "PROP_ENDPOINT_STATE_61",
    0x103E: "PROP_ENDPOINT_STATE_62",
    0x103F: "PROP_ENDPOINT_STATE_63",
    0x1040: "PROP_ENDPOINT_STATE_64",
    0x1041: "PROP_ENDPOINT_STATE_65",
    0x1042: "PROP_ENDPOINT_STATE_66",
    0x1043: "PROP_ENDPOINT_STATE_67",
    0x1044: "PROP_ENDPOINT_STATE_68",
    0x1045: "PROP_ENDPOINT_STATE_69",
    0x1046: "PROP_ENDPOINT_STATE_70",
    0x1047: "PROP_ENDPOINT_STATE_71",
    0x1048: "PROP_ENDPOINT_STATE_72",
    0x1049: "PROP_ENDPOINT_STATE_73",
    0x104A: "PROP_ENDPOINT_STATE_74",
    0x104B: "PROP_ENDPOINT_STATE_75",
    0x104C: "PROP_ENDPOINT_STATE_76",
    0x104D: "PROP_ENDPOINT_STATE_77",
    0x104E: "PROP_ENDPOINT_STATE_78",
    0x104F: "PROP_ENDPOINT_STATE_79",
    0x1050: "PROP_ENDPOINT_STATE_80",
    0x1051: "PROP_ENDPOINT_STATE_81",
    0x1052: "PROP_ENDPOINT_STATE_82",
    0x1053: "PROP_ENDPOINT_STATE_83",
    0x1054: "PROP_ENDPOINT_STATE_84",
    0x1055: "PROP_ENDPOINT_STATE_85",
    0x1056: "PROP_ENDPOINT_STATE_86",
    0x1057: "PROP_ENDPOINT_STATE_87",
    0x1058: "PROP_ENDPOINT_STATE_88",
    0x1059: "PROP_ENDPOINT_STATE_89",
    0x105A: "PROP_ENDPOINT_STATE_90",
    0x105B: "PROP_ENDPOINT_STATE_91",
    0x105C: "PROP_ENDPOINT_STATE_92",
    0x105D: "PROP_ENDPOINT_STATE_93",
    0x105E: "PROP_ENDPOINT_STATE_94",
    0x105F: "PROP_ENDPOINT_STATE_95",
    0x1060: "PROP_ENDPOINT_STATE_96",
    0x1061: "PROP_ENDPOINT_STATE_97",
    0x1062: "PROP_ENDPOINT_STATE_98",
    0x1063: "PROP_ENDPOINT_STATE_99",
    0x1064: "PROP_ENDPOINT_STATE_100",
    0x1065: "PROP_ENDPOINT_STATE_101",
    0x1066: "PROP_ENDPOINT_STATE_102",
    0x1067: "PROP_ENDPOINT_STATE_103",
    0x1068: "PROP_ENDPOINT_STATE_104",
    0x1069: "PROP_ENDPOINT_STATE_105",
    0x106A: "PROP_ENDPOINT_STATE_106",
    0x106B: "PROP_ENDPOINT_STATE_107",
    0x106C: "PROP_ENDPOINT_STATE_108",
    0x106D: "PROP_ENDPOINT_STATE_109",
    0x106E: "PROP_ENDPOINT_STATE_110",
    0x106F: "PROP_ENDPOINT_STATE_111",
    0x1070: "PROP_ENDPOINT_STATE_112",
    0x1071: "PROP_ENDPOINT_STATE_113",
    0x1072: "PROP_ENDPOINT_STATE_114",
    0x1073: "PROP_ENDPOINT_STATE_115",
    0x1074: "PROP_ENDPOINT_STATE_116",
    0x1075: "PROP_ENDPOINT_STATE_117",
    0x1076: "PROP_ENDPOINT_STATE_118",
    0x1077: "PROP_ENDPOINT_STATE_119",
    0x1078: "PROP_ENDPOINT_STATE_120",
    0x1079: "PROP_ENDPOINT_STATE_121",
    0x107A: "PROP_ENDPOINT_STATE_122",
    0x107B: "PROP_ENDPOINT_STATE_123",
    0x107C: "PROP_ENDPOINT_STATE_124",
    0x107D: "PROP_ENDPOINT_STATE_125",
    0x107E: "PROP_ENDPOINT_STATE_126",
    0x107F: "PROP_ENDPOINT_STATE_127",
    0x1080: "PROP_ENDPOINT_STATE_128",
    0x1081: "PROP_ENDPOINT_STATE_129",
    0x1082: "PROP_ENDPOINT_STATE_130",
    0x1083: "PROP_ENDPOINT_STATE_131",
    0x1084: "PROP_ENDPOINT_STATE_132",
    0x1085: "PROP_ENDPOINT_STATE_133",
    0x1086: "PROP_ENDPOINT_STATE_134",
    0x1087: "PROP_ENDPOINT_STATE_135",
    0x1088: "PROP_ENDPOINT_STATE_136",
    0x1089: "PROP_ENDPOINT_STATE_137",
    0x108A: "PROP_ENDPOINT_STATE_138",
    0x108B: "PROP_ENDPOINT_STATE_139",
    0x108C: "PROP_ENDPOINT_STATE_140",
    0x108D: "PROP_ENDPOINT_STATE_141",
    0x108E: "PROP_ENDPOINT_STATE_142",
    0x108F: "PROP_ENDPOINT_STATE_143",
    0x1090: "PROP_ENDPOINT_STATE_144",
    0x1091: "PROP_ENDPOINT_STATE_145",
    0x1092: "PROP_ENDPOINT_STATE_146",
    0x1093: "PROP_ENDPOINT_STATE_147",
    0x1094: "PROP_ENDPOINT_STATE_148",
    0x1095: "PROP_ENDPOINT_STATE_149",
    0x1096: "PROP_ENDPOINT_STATE_150",
    0x1097: "PROP_ENDPOINT_STATE_151",
    0x1098: "PROP_ENDPOINT_STATE_152",
    0x1099: "PROP_ENDPOINT_STATE_153",
    0x109A: "PROP_ENDPOINT_STATE_154",
    0x109B: "PROP_ENDPOINT_STATE_155",
    0x109C: "PROP_ENDPOINT_STATE_156",
    0x109D: "PROP_ENDPOINT_STATE_157",
    0x109E: "PROP_ENDPOINT_STATE_158",
    0x109F: "PROP_ENDPOINT_STATE_159",
    0x10A0: "PROP_ENDPOINT_STATE_160",
    0x10A1: "PROP_ENDPOINT_STATE_161",
    0x10A2: "PROP_ENDPOINT_STATE_162",
    0x10A3: "PROP_ENDPOINT_STATE_163",
    0x10A4: "PROP_ENDPOINT_STATE_164",
    0x10A5: "PROP_ENDPOINT_STATE_165",
    0x10A6: "PROP_ENDPOINT_STATE_166",
    0x10A7: "PROP_ENDPOINT_STATE_167",
    0x10A8: "PROP_ENDPOINT_STATE_168",
    0x10A9: "PROP_ENDPOINT_STATE_169",
    0x10AA: "PROP_ENDPOINT_STATE_170",
    0x10AB: "PROP_ENDPOINT_STATE_171",
    0x10AC: "PROP_ENDPOINT_STATE_172",
    0x10AD: "PROP_ENDPOINT_STATE_173",
    0x10AE: "PROP_ENDPOINT_STATE_174",
    0x10AF: "PROP_ENDPOINT_STATE_175",
    0x10B0: "PROP_ENDPOINT_STATE_176",
    0x10B1: "PROP_ENDPOINT_STATE_177",
    0x10B2: "PROP_ENDPOINT_STATE_178",
    0x10B3: "PROP_ENDPOINT_STATE_179",
    0x10B4: "PROP_ENDPOINT_STATE_180",
    0x10B5: "PROP_ENDPOINT_STATE_181",
    0x10B6: "PROP_ENDPOINT_STATE_182",
    0x10B7: "PROP_ENDPOINT_STATE_183",
    0x10B8: "PROP_ENDPOINT_STATE_184",
    0x10B9: "PROP_ENDPOINT_STATE_185",
    0x10BA: "PROP_ENDPOINT_STATE_186",
    0x10BB: "PROP_ENDPOINT_STATE_187",
    0x10BC: "PROP_ENDPOINT_STATE_188",
    0x10BD: "PROP_ENDPOINT_STATE_189",
    0x10BE: "PROP_ENDPOINT_STATE_190",
    0x10BF: "PROP_ENDPOINT_STATE_191",
    0x10C0: "PROP_ENDPOINT_STATE_192",
    0x10C1: "PROP_ENDPOINT_STATE_193",
    0x10C2: "PROP_ENDPOINT_STATE_194",
    0x10C3: "PROP_ENDPOINT_STATE_195",
    0x10C4: "PROP_ENDPOINT_STATE_196",
    0x10C5: "PROP_ENDPOINT_STATE_197",
    0x10C6: "PROP_ENDPOINT_STATE_198",
    0x10C7: "PROP_ENDPOINT_STATE_199",
    0x10C8: "PROP_ENDPOINT_STATE_200",
    0x10C9: "PROP_ENDPOINT_STATE_201",
    0x10CA: "PROP_ENDPOINT_STATE_202",
    0x10CB: "PROP_ENDPOINT_STATE_203",
    0x10CC: "PROP_ENDPOINT_STATE_204",
    0x10CD: "PROP_ENDPOINT_STATE_205",
    0x10CE: "PROP_ENDPOINT_STATE_206",
    0x10CF: "PROP_ENDPOINT_STATE_207",
    0x10D0: "PROP_ENDPOINT_STATE_208",
    0x10D1: "PROP_ENDPOINT_STATE_209",
    0x10D2: "PROP_ENDPOINT_STATE_210",
    0x10D3: "PROP_ENDPOINT_STATE_211",
    0x10D4: "PROP_ENDPOINT_STATE_212",
    0x10D5: "PROP_ENDPOINT_STATE_213",
    0x10D6: "PROP_ENDPOINT_STATE_214",
    0x10D7: "PROP_ENDPOINT_STATE_215",
    0x10D8: "PROP_ENDPOINT_STATE_216",
    0x10D9: "PROP_ENDPOINT_STATE_217",
    0x10DA: "PROP_ENDPOINT_STATE_218",
    0x10DB: "PROP_ENDPOINT_STATE_219",
    0x10DC: "PROP_ENDPOINT_STATE_220",
    0x10DD: "PROP_ENDPOINT_STATE_221",
    0x10DE: "PROP_ENDPOINT_STATE_222",
    0x10DF: "PROP_ENDPOINT_STATE_223",
    0x10E0: "PROP_ENDPOINT_STATE_224",
    0x10E1: "PROP_ENDPOINT_STATE_225",
    0x10E2: "PROP_ENDPOINT_STATE_226",
    0x10E3: "PROP_ENDPOINT_STATE_227",
    0x10E4: "PROP_ENDPOINT_STATE_228",
    0x10E5: "PROP_ENDPOINT_STATE_229",
    0x10E6: "PROP_ENDPOINT_STATE_230",
    0x10E7: "PROP_ENDPOINT_STATE_231",
    0x10E8: "PROP_ENDPOINT_STATE_232",
    0x10E9: "PROP_ENDPOINT_STATE_233",
    0x10EA: "PROP_ENDPOINT_STATE_234",
    0x10EB: "PROP_ENDPOINT_STATE_235",
    0x10EC: "PROP_ENDPOINT_STATE_236",
    0x10ED: "PROP_ENDPOINT_STATE_237",
    0x10EE: "PROP_ENDPOINT_STATE_238",
    0x10EF: "PROP_ENDPOINT_STATE_239",
    0x10F0: "PROP_ENDPOINT_STATE_240",
    0x10F1: "PROP_ENDPOINT_STATE_241",
    0x10F2: "PROP_ENDPOINT_STATE_242",
    0x10F3: "PROP_ENDPOINT_STATE_243",
    0x10F4: "PROP_ENDPOINT_STATE_244",
    0x10F5: "PROP_ENDPOINT_STATE_245",
    0x10F6: "PROP_ENDPOINT_STATE_246",
    0x10F7: "PROP_ENDPOINT_STATE_247",
    0x10F8: "PROP_ENDPOINT_STATE_248",
    0x10F9: "PROP_ENDPOINT_STATE_249",
    0x10FA: "PROP_ENDPOINT_STATE_250",
    0x10FB: "PROP_ENDPOINT_STATE_251",
    0x10FC: "PROP_ENDPOINT_STATE_252",
    0x10FD: "PROP_ENDPOINT_STATE_253",
    0x10FE: "PROP_ENDPOINT_STATE_254",
    0x10FF: "PROP_ENDPOINT_STATE_255",
    0x1100: "PROP_ENDPOINT_STATES",
}

def decode_line(line, split_str):
    try:
        frame = line.split(split_str)[-1].strip()
        bytes_list = frame.split(":")
        if len(bytes_list) < 4:
            return None
        endpoint = int(bytes_list[1], 16)
        length = int(bytes_list[2], 16)
        control = int(bytes_list[4],16)
        control_str = ""
        if ((control & 0x80) == 0):
            control_text = "data command"
        elif ((control & 0xC0) == 0xC0):
            control_text = "unnumbered command"
        elif ((control & 0x80) == 0x80):
            control_text = "supervisory command"
        if (endpoint == 12) and (control_text == "data command"):
            # The spinel packet starts in a different place depending on the packet
            if ((split_str == "rxd frame : ") or (split_str == "Sent frame to core : ")):
                cmd_index = 10
            else:
                cmd_index = 8
            command = int(bytes_list[cmd_index], 16)
            command_text = COMMAND_MAP.get(command, f"UNKNOWN_CMD")
            key = int(bytes_list[cmd_index + 1], 16)
            if (key & 0x80):
                # clear bit
                key = (key & ~0x80)
                #print(f"key cleared: {key}")
                key = (int(bytes_list[cmd_index + 2], 16) << 7) | key
            key_text = KEY_MAP.get(key, f"UNKNOWN_KEY")
            return f"[DECODE] Endpoint={endpoint} Length={length}, control ={control_text}, command={command_text}, key={key_text}"
        elif ((endpoint == 0) and (control_text != "supervisory command")):
            cmd_index = 7
            command = int(bytes_list[cmd_index], 16)
            command_text = SYS_EP_COMMAND_MAP.get(command, f"UNKNOWN_CMD")
            key = int(bytes_list[cmd_index + 4], 16)
            key = key | int(bytes_list[cmd_index + 5], 16) << 8
            key_text = SYS_EP_KEY_MAP.get(key, f"UNKNOWN_KEY")
            return f"[DECODE] Endpoint={endpoint} Length={length}, control ={control_text}, command={command_text}, key={key_text}"
        elif (control_text == "supervisory command"):
            command = (control >> 4) & 0x03
            if (command == 0):
                command_text = "ACK"
            elif (command == 1):
                command_text = "REJECT"
            else:
                command_text = ""
            return f"[DECODE] Endpoint={endpoint} Length={length}, control ={control_text}, sup_cmd={command_text}"
        else:
            return f"[DECODE] Endpoint={endpoint} Length={length}, control ={control_text}"
    except Exception:
        return None

def process_log(input_file, output_file):
    with open(input_file, "r") as infile, open(output_file, "w") as outfile:
        for line in infile:
            outfile.write(line)
            if "rxd frame" in line:
                decoded = decode_line(line, "rxd frame : ")
            elif  "Pushed frame to driver" in line:
                decoded = decode_line(line, "Pushed frame to driver : ")
            elif "Sent frame to core : " in line:
                decoded = decode_line(line,  "Sent frame to core : ")
            else:
                decoded = None
            if decoded:
                outfile.write(decoded + "\n")

if __name__ == "__main__":
    # total arguments
    n = len(sys.argv)

    if (n != 3):
        print("Error! Usage: cpcd_log_decoder.py <infile> <outfile>")
        exit()
    infile = sys.argv[1]
    outfile = sys.argv[2]

    process_log(infile, outfile)
